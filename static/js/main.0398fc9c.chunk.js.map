{"version":3,"sources":["Turnips.module.css","turnipCalculator.ts","Chart.tsx","storageService.ts","Turnips.tsx","App.tsx","serviceWorker.js","index.js"],"names":["module","exports","randint","low","high","Math","floor","random","intceil","num","ceil","randfloat","patternNames","pattern0","basePrice","sellPrices","work","hiPhaseLen1","decPhaseLen1","hiPhaseLen2and3","decPhaseLen2","hiPhaseLen3","i","rate","shift","predictPattern0","predictions","metadata","forEach","push","blankPrediction","variation","length","config","minRate","maxRate","pattern1","peakStart","predictPattern1","pattern2","predictPattern2","pattern3","predictPattern3","runPattern","pattern","patternProbability","lastPattern","possiblePatterns","startPrice","patterns","prob","idx","patternsTemp","prediction","dailyPriceRange","probability","type","totalProb","reduce","a","b","expectedPrice","day","expectedPrices","expectedPricesHigh","expectedPricesLow","startDay","expectedMax","expectedHigh","expectedLow","expected","min","max","price","dailyPredictedPrice","simulateFromPrice","maxTime","allPrices","failedRuns","totalProfit","probabilityMap","startTime","Date","now","runs","rand","result","attempts","unshift","match","thisMatches","knownData","j","isDecreasing","every","p","gain","makeHistogram","prices","bucketSize","counts","c","Chart","props","d3Container","useRef","margin","width","height","useState","chartElements","setChartElements","useEffect","svg","remove","newSvg","d3","current","attr","append","style","x","domain","options","xDomain","range","call","tickFormat","xTickFormat","y","yDomain","yTickFormat","title","text","data","callout","g","value","path","selectAll","join","split","d","_","node","getBBox","w","h","dataArea","tooltip","on","mouse","this","selectedPoints","allXvalues","Set","areas","item","point","add","lines","closestX","xPos","invert","Array","from","xValue","abs","allLines","allAreas","allPoints","bisect","calloutMessage","newAreas","newLines","area","elem","datum","undefined","opacity","y0","y1","line","className","ref","memoryStore","USE_LOCAL_STORE","localStorage","getStore","dataStr","getItem","JSON","parse","setStore","setItem","stringify","DAYS","turnipPriceStore","key","expiration","clear","storageService","pop","cleanPrices","PriceForm","setLastPattern","setPrices","changePrice","e","newPrices","parseFloat","target","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","store","onChange","parseInt","patternSelect","map","name","selected","priceTable","formDay","dayName","Turnips","simulated","setSimulated","currentDay","currentPrice","charts","round","masterChart","chart","simulate","res","Promise","r","histogram","func","deps","id","useDebounceFn","recommendation","color","yMax","yMin","App","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","fetch","headers","response","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.0398fc9c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"priceTable\":\"Turnips_priceTable__1R06m\",\"formDay\":\"Turnips_formDay__1WR1H\",\"recommendation\":\"Turnips_recommendation__1YEcW\",\"patternSelect\":\"Turnips_patternSelect__1x5LR\"};","// https://gist.github.com/Treeki/85be14d297c80c8b3c0a76375743325b\n\nconst randbool = () => Math.random() > 0.5;\nconst randint = (low: number, high: number) =>\n  Math.floor(Math.random() * (high - low + 1)) + low;\nconst intceil = (num: number) => Math.ceil(num);\nconst randfloat = (low: number, high: number) =>\n  Math.random() * (high - low) + low;\n\ninterface Pattern {\n  dailyPriceRange: { low: number; high: number }[];\n  probability: number;\n  type: number; // 0|1|2|3;\n}\n\nexport const patternNames = [\n  \"Random\",\n  \"Large Spike\",\n  \"Decreasing\",\n  \"Small Spike\",\n  \"Unknown\"\n];\n\n// 0.9 - 1.4 random\nfunction pattern0(basePrice: number) {\n  let sellPrices = [basePrice, basePrice];\n  // PATTERN 0: high, decreasing, high, decreasing, high\n  let work = 2;\n\n  const hiPhaseLen1 = randint(0, 6);\n  const decPhaseLen1 = randbool() ? 3 : 2;\n  const hiPhaseLen2and3 = 7 - hiPhaseLen1;\n  const decPhaseLen2 = 5 - decPhaseLen1;\n  const hiPhaseLen3 = randint(0, hiPhaseLen2and3 - 1);\n\n  // high phase 1\n  for (let i = 0; i < hiPhaseLen1; i++) {\n    sellPrices[work++] = intceil(randfloat(0.9, 1.4) * basePrice);\n  }\n\n  // decreasing phase 1\n  let rate = randfloat(0.8, 0.6);\n  for (let i = 0; i < decPhaseLen1; i++) {\n    sellPrices[work++] = intceil(rate * basePrice);\n    rate -= 0.04;\n    rate -= randfloat(0, 0.06);\n  }\n\n  // high phase 2\n  for (let i = 0; i < hiPhaseLen2and3 - hiPhaseLen3; i++) {\n    sellPrices[work++] = intceil(randfloat(0.9, 1.4) * basePrice);\n  }\n\n  // decreasing phase 2\n  rate = randfloat(0.8, 0.6);\n  for (let i = 0; i < decPhaseLen2; i++) {\n    sellPrices[work++] = intceil(rate * basePrice);\n    rate -= 0.04;\n    rate -= randfloat(0, 0.06);\n  }\n\n  // high phase 3\n  for (let i = 0; i < hiPhaseLen3; i++) {\n    sellPrices[work++] = intceil(randfloat(0.9, 1.4) * basePrice);\n  }\n  sellPrices.shift();\n  sellPrices.shift();\n  return sellPrices;\n}\nfunction predictPattern0(sellPrices: number[]) {\n  const basePrice = sellPrices[0];\n  // [low, high] x 14 vals x prediction trees\n  let predictions: [number, number][][] = [];\n  let metadata: {\n    decPhaseLen1: number;\n    hiPhaseLen1: number;\n    hiPhaseLen3: number;\n    hiPhaseLen2and3: number;\n    decPhaseLen2: number;\n  }[] = [];\n\n  [0, 1, 2, 3, 4, 5, 6].forEach(hiPhaseLen1 => {\n    [2, 3].forEach(decPhaseLen1 => {\n      [0, 1, 2, 3, 4, 5, 6].forEach(hiPhaseLen3 => {\n        const hiPhaseLen2and3 = 7 - hiPhaseLen1;\n        const decPhaseLen2 = 5 - decPhaseLen1;\n        if (hiPhaseLen3 > hiPhaseLen2and3 - 1) return;\n\n        metadata.push({\n          decPhaseLen1,\n          hiPhaseLen1,\n          hiPhaseLen3,\n          hiPhaseLen2and3,\n          decPhaseLen2\n        });\n        let blankPrediction: typeof predictions[0] = [];\n        for (let i = 0; i < 14; i++)\n          blankPrediction.push([sellPrices[i], sellPrices[i]]);\n        predictions.push(blankPrediction);\n      });\n    });\n  });\n\n  for (let variation = 0; variation < metadata.length; variation++) {\n    const config = metadata[variation];\n\n    // high phase 1\n    let work = 2;\n    for (let i = 0; i < config.hiPhaseLen1; i++) {\n      if (!sellPrices[work]) {\n        predictions[variation][work][0] = Math.floor(0.9 * basePrice);\n        predictions[variation][work][1] = Math.ceil(1.4 * basePrice);\n      }\n      work++;\n    }\n\n    // decreasing phase 1\n    let minRate = 0.6;\n    let maxRate = 0.8;\n    for (let i = 0; i < config.decPhaseLen1; i++) {\n      if (!sellPrices[work]) {\n        predictions[variation][work][0] = Math.floor(minRate * basePrice);\n        predictions[variation][work][1] = Math.ceil(maxRate * basePrice);\n      }\n      minRate -= 0.04 + 0.06;\n      maxRate -= 0.04;\n      work++;\n    }\n\n    // high phase 2\n    for (let i = 0; i < config.hiPhaseLen2and3 - config.hiPhaseLen3; i++) {\n      if (!sellPrices[work]) {\n        predictions[variation][work][0] = Math.floor(0.9 * basePrice);\n        predictions[variation][work][1] = Math.ceil(1.4 * basePrice);\n      }\n      work++;\n    }\n\n    // decreasing phase 2\n    minRate = 0.6;\n    maxRate = 0.8;\n    for (let i = 0; i < config.decPhaseLen2; i++) {\n      if (!sellPrices[work]) {\n        predictions[variation][work][0] = Math.floor(minRate * basePrice);\n        predictions[variation][work][1] = Math.ceil(maxRate * basePrice);\n      }\n      minRate -= 0.04 + 0.06;\n      maxRate -= 0.04;\n      work++;\n    }\n    // high phase 3\n    for (let i = 0; i < config.hiPhaseLen3; i++) {\n      if (!sellPrices[work]) {\n        predictions[variation][work][0] = Math.floor(0.9 * basePrice);\n        predictions[variation][work][1] = Math.ceil(1.4 * basePrice);\n      }\n      work++;\n    }\n  }\n\n  return predictions;\n}\n// 2.0 - 6.0 large spike\nfunction pattern1(basePrice: number) {\n  let sellPrices = [basePrice, basePrice];\n  // PATTERN 1: decreasing middle, high spike, random low\n  const peakStart = randint(3, 9);\n  let rate = randfloat(0.9, 0.85);\n  let work = 2;\n  for (; work < peakStart; work++) {\n    sellPrices[work] = intceil(rate * basePrice);\n    rate -= 0.03;\n    rate -= randfloat(0, 0.02);\n  }\n  sellPrices[work++] = intceil(randfloat(0.9, 1.4) * basePrice);\n  sellPrices[work++] = intceil(randfloat(1.4, 2.0) * basePrice);\n  sellPrices[work++] = intceil(randfloat(2.0, 6.0) * basePrice);\n  sellPrices[work++] = intceil(randfloat(1.4, 2.0) * basePrice);\n  sellPrices[work++] = intceil(randfloat(0.9, 1.4) * basePrice);\n  for (; work < 14; work++) {\n    sellPrices[work] = intceil(randfloat(0.4, 0.9) * basePrice);\n  }\n  sellPrices.shift();\n  sellPrices.shift();\n  return sellPrices;\n}\nfunction predictPattern1(sellPrices: number[]) {\n  const basePrice = sellPrices[0];\n  // [low, high] x 14 vals x prediction trees\n  let predictions: [number, number][][] = [];\n  let metadata: { peakStart: number }[] = [];\n\n  [3, 4, 5, 6, 7, 8, 9].forEach(peakStart => {\n    metadata.push({ peakStart });\n    let blankPrediction: typeof predictions[0] = [];\n    for (let i = 0; i < 14; i++)\n      blankPrediction.push([sellPrices[i], sellPrices[i]]);\n    predictions.push(blankPrediction);\n  });\n\n  for (let variation = 0; variation < metadata.length; variation++) {\n    const config = metadata[variation];\n    let minRate = 0.85;\n    let maxRate = 0.9;\n    let work = 2;\n    for (; work < config.peakStart; work++) {\n      if (!sellPrices[work]) {\n        predictions[variation][work][0] = Math.floor(minRate * basePrice);\n        predictions[variation][work][1] = Math.ceil(maxRate * basePrice);\n      }\n      minRate -= 0.03 + 0.02;\n      maxRate -= 0.03;\n    }\n\n    if (!sellPrices[work]) {\n      predictions[variation][work][0] = Math.floor(0.9 * basePrice);\n      predictions[variation][work][1] = Math.ceil(1.4 * basePrice);\n    }\n    work++;\n    if (!sellPrices[work]) {\n      predictions[variation][work][0] = Math.floor(1.4 * basePrice);\n      predictions[variation][work][1] = Math.ceil(2.0 * basePrice);\n    }\n    work++;\n    if (!sellPrices[work]) {\n      predictions[variation][work][0] = Math.floor(2.0 * basePrice);\n      predictions[variation][work][1] = Math.ceil(6.0 * basePrice);\n    }\n    work++;\n    if (!sellPrices[work]) {\n      predictions[variation][work][0] = Math.floor(1.4 * basePrice);\n      predictions[variation][work][1] = Math.ceil(2.0 * basePrice);\n    }\n    work++;\n    if (!sellPrices[work]) {\n      predictions[variation][work][0] = Math.floor(0.9 * basePrice);\n      predictions[variation][work][1] = Math.ceil(1.4 * basePrice);\n    }\n    work++;\n\n    for (; work < 14; work++) {\n      if (!sellPrices[work]) {\n        predictions[variation][work][0] = Math.floor(0.4 * basePrice);\n        predictions[variation][work][1] = Math.ceil(0.9 * basePrice);\n      }\n    }\n  }\n\n  return predictions;\n}\n// 0.9 - 0.3 decreasing\nfunction pattern2(basePrice: number) {\n  let sellPrices = [basePrice, basePrice];\n  // PATTERN 2: consistently decreasing\n  let rate = 0.9;\n  rate -= randfloat(0, 0.05);\n  for (let work = 2; work < 14; work++) {\n    sellPrices[work] = intceil(rate * basePrice);\n    rate -= 0.03;\n    rate -= randfloat(0, 0.02);\n  }\n  sellPrices.shift();\n  sellPrices.shift();\n  return sellPrices;\n}\nfunction predictPattern2(sellPrices: number[]) {\n  const basePrice = sellPrices[0];\n  // [low, high] x 14 vals x prediction trees\n  let predictions: [number, number][][] = [];\n\n  let blankPrediction: typeof predictions[0] = [];\n  for (let i = 0; i < 14; i++)\n    blankPrediction.push([sellPrices[i], sellPrices[i]]);\n  predictions.push(blankPrediction);\n\n  let minRate = 0.9;\n  let maxRate = 0.9;\n\n  minRate -= 0.05;\n  maxRate -= 0;\n  for (let work = 2; work < 14; work++) {\n    for (let variation = 0; variation < predictions.length; variation++) {\n      if (!sellPrices[work]) {\n        predictions[variation][work][0] = Math.floor(minRate * basePrice);\n        predictions[variation][work][1] = Math.ceil(maxRate * basePrice);\n      }\n    }\n    minRate -= 0.03 + 0.02;\n    maxRate -= 0.03;\n  }\n  return predictions;\n}\n// 1.4 - 2.0 small spike\nfunction pattern3(basePrice: number) {\n  let sellPrices = [basePrice, basePrice];\n  // PATTERN 3: decreasing, spike, decreasing\n  const peakStart = randint(2, 9);\n\n  // decreasing phase before the peak\n  let rate = randfloat(0.9, 0.4);\n  let work = 2;\n  for (; work < peakStart; work++) {\n    sellPrices[work] = intceil(rate * basePrice);\n    rate -= 0.03;\n    rate -= randfloat(0, 0.02);\n  }\n\n  sellPrices[work++] = intceil(randfloat(0.9, 1.4) * basePrice);\n  sellPrices[work++] = intceil(randfloat(0.9, 1.4) * basePrice);\n  rate = randfloat(1.4, 2.0);\n  sellPrices[work++] = intceil(randfloat(1.4, rate) * basePrice) - 1;\n  sellPrices[work++] = intceil(rate * basePrice);\n  sellPrices[work++] = intceil(randfloat(1.4, rate) * basePrice) - 1;\n\n  // decreasing phase after the peak\n  if (work < 14) {\n    rate = randfloat(0.9, 0.4);\n    for (; work < 14; work++) {\n      sellPrices[work] = intceil(rate * basePrice);\n      rate -= 0.03;\n      rate -= randfloat(0, 0.02);\n    }\n  }\n\n  sellPrices.shift();\n  sellPrices.shift();\n  return sellPrices;\n}\nfunction predictPattern3(sellPrices: number[]) {\n  const basePrice = sellPrices[0];\n  // [low, high] x 14 vals x prediction trees\n  let predictions: [number, number][][] = [];\n  let metadata: { peakStart: number }[] = [];\n\n  [2, 3, 4, 5, 6, 7, 8, 9].forEach(peakStart => {\n    metadata.push({ peakStart });\n    let blankPrediction: typeof predictions[0] = [];\n    for (let i = 0; i < 14; i++)\n      blankPrediction.push([sellPrices[i], sellPrices[i]]);\n    predictions.push(blankPrediction);\n  });\n\n  for (let variation = 0; variation < metadata.length; variation++) {\n    const config = metadata[variation];\n    let minRate = 0.4;\n    let maxRate = 0.9;\n    let work = 2;\n    for (; work < config.peakStart; work++) {\n      if (!sellPrices[work]) {\n        predictions[variation][work][0] = Math.floor(minRate * basePrice);\n        predictions[variation][work][1] = Math.ceil(maxRate * basePrice);\n      }\n      minRate -= 0.03 + 0.02;\n      maxRate -= 0.03;\n    }\n\n    if (!sellPrices[work]) {\n      predictions[variation][work][0] = Math.floor(0.9 * basePrice);\n      predictions[variation][work][1] = Math.ceil(1.4 * basePrice);\n    }\n    work++;\n    if (!sellPrices[work]) {\n      predictions[variation][work][0] = Math.floor(0.9 * basePrice);\n      predictions[variation][work][1] = Math.ceil(1.4 * basePrice);\n    }\n    work++;\n    if (!sellPrices[work]) {\n      predictions[variation][work][0] = Math.floor(1.4 * basePrice) - 1;\n      predictions[variation][work][1] = Math.ceil(2 * basePrice) - 1;\n    }\n    work++;\n    if (!sellPrices[work]) {\n      predictions[variation][work][0] = Math.floor(1.4 * basePrice);\n      predictions[variation][work][1] = Math.ceil(2 * basePrice);\n    }\n    work++;\n    if (!sellPrices[work]) {\n      predictions[variation][work][0] = Math.floor(1.4 * basePrice) - 1;\n      predictions[variation][work][1] = Math.ceil(2 * basePrice) - 1;\n    }\n    work++;\n\n    if (work < 14) {\n      minRate = 0.4;\n      maxRate = 0.9;\n      for (; work < 14; work++) {\n        if (!sellPrices[work]) {\n          predictions[variation][work][0] = Math.floor(minRate * basePrice);\n          predictions[variation][work][1] = Math.ceil(maxRate * basePrice);\n        }\n        minRate -= 0.03 + 0.02;\n        maxRate -= 0.03;\n      }\n    }\n  }\n\n  return predictions;\n}\nfunction predictPattern(pattern: number, sellPrices: number[]) {\n  if (pattern === 0) return predictPattern0(sellPrices);\n  if (pattern === 1) return predictPattern1(sellPrices);\n  if (pattern === 2) return predictPattern2(sellPrices);\n  if (pattern === 3) return predictPattern3(sellPrices);\n  return [];\n}\n\nfunction runPattern(pattern: number, basePrice: number) {\n  if (pattern === 0) return pattern0(basePrice);\n  if (pattern === 1) return pattern1(basePrice);\n  if (pattern === 2) return pattern2(basePrice);\n  if (pattern === 3) return pattern3(basePrice);\n  return [];\n}\n\nfunction whichPattern(lastPattern: number) {\n  const chance = randint(0, 99);\n  switch (lastPattern) {\n    case 0:\n      if (chance < 20) return 0; // 20\n      if (chance < 50) return 1; // 30\n      if (chance < 65) return 2; // 15\n      return 3; // 35\n    case 1:\n      if (chance < 50) return 0; // 50\n      if (chance < 55) return 1; // 5\n      if (chance < 75) return 2; // 20\n      return 3; // 25\n    case 2:\n      if (chance < 25) return 0; // 25\n      if (chance < 70) return 1; // 45\n      if (chance < 75) return 2; // 5\n      return 3; // 25\n    case 3:\n      if (chance < 45) return 0; // 45\n      if (chance < 70) return 1; // 25\n      if (chance < 85) return 2; // 15\n      return 3; // 15\n  }\n  return 2;\n}\n// [\n//   \"Random\",\n//   \"Large Spike\",\n//   \"Decreasing\",\n//   \"Small Spike\"\n// ];\nfunction patternProbability(lastPattern: number) {\n  if (lastPattern === 0) return [0.2, 0.3, 0.15, 0.35];\n  if (lastPattern === 1) return [0.5, 0.05, 0.2, 0.25];\n  if (lastPattern === 2) return [0.25, 0.45, 0.05, 0.25];\n  if (lastPattern === 3) return [0.45, 0.25, 0.15, 0.15];\n  return [0.35, 0.25, 0.15, 0.25];\n}\nfunction startPrice() {\n  return randint(90, 110);\n}\n\n// [buy, buy, mon am, mon pm, tue am, tue pm...]\nexport function possiblePatterns(\n  sellPrices: number[],\n  lastPattern: number = -1\n) {\n  // console.log(sellPrices);\n  const startPrice = [...sellPrices];\n  for (let i = 2; i < startPrice.length; i++) startPrice[i] = 0;\n  const predictions = [\n    predictPattern0(startPrice),\n    predictPattern1(startPrice),\n    predictPattern2(startPrice),\n    predictPattern3(startPrice)\n  ];\n\n  // let text: string[] = [];\n  // let csv: string[] = [];\n  let patterns: Pattern[] = [];\n\n  const prob = patternProbability(lastPattern);\n\n  // has 4 patterns\n  predictions.forEach((predictions, idx) => {\n    const patternsTemp: typeof patterns = [];\n\n    // all predictions in this pattern\n    predictions.forEach(prediction => {\n      const pattern: typeof patterns[0] = {\n        dailyPriceRange: [],\n        probability: 0,\n        type: idx\n      };\n\n      // daily prediction\n      for (let i = 0; i < 2; i++) {\n        pattern.dailyPriceRange.push({\n          high: sellPrices[i],\n          low: sellPrices[i]\n        });\n      }\n      for (let i = 2; i < prediction.length; i++) {\n        const low = prediction[i][0];\n        const high = prediction[i][1];\n\n        // skip if not within range\n        if (sellPrices[i] && sellPrices[i] < low) return;\n        if (sellPrices[i] && sellPrices[i] > high) return;\n\n        pattern.dailyPriceRange.push({\n          high: high,\n          low: low\n        });\n      }\n      // this is a valid pattern, add it\n      patternsTemp.push(pattern);\n    });\n\n    // probability of each pattern in the prediction\n    patternsTemp.forEach(pattern => {\n      pattern.probability = prob[idx] / patternsTemp.length;\n    });\n\n    patterns.push(...patternsTemp);\n  });\n\n  // normalize probabilities\n  const totalProb = patterns.reduce((a, b) => a + b.probability, 0);\n  patterns.forEach(\n    pattern => (pattern.probability = pattern.probability / totalProb)\n  );\n\n  return { patterns };\n}\n\nexport function dailyPredictedPrice(patterns: Pattern[]) {\n  let expectedPrices: number[] = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  let expectedPricesHigh: number[] = [];\n  let expectedPricesLow: number[] = [];\n  patterns.forEach(pattern => {\n    for (let startDay = 2; startDay < 14; startDay++) {\n      let expectedMax = 0;\n      let expectedHigh = 0;\n      let expectedLow = 0;\n      for (let day = startDay; day < 14; day++) {\n        const high = pattern.dailyPriceRange[day].high;\n        const low = pattern.dailyPriceRange[day].low;\n        const expected = (high + low) / 2;\n        if (expectedMax < expected) {\n          expectedMax = expected;\n          expectedHigh = high;\n          expectedLow = low;\n        }\n      }\n      expectedPrices[startDay] += expectedMax * pattern.probability;\n      expectedPricesLow[startDay] = Math.min(\n        expectedPricesLow[startDay] || 99999,\n        expectedLow\n      );\n      expectedPricesHigh[startDay] = Math.max(\n        expectedPricesHigh[startDay] || 0,\n        expectedHigh\n      );\n    }\n  });\n  return {\n    price: expectedPrices,\n    low: expectedPricesLow,\n    high: expectedPricesHigh\n  };\n}\n\nexport function expectedPrice(patterns: Pattern[], day: number) {\n  const expectedPrices = dailyPredictedPrice(patterns);\n  let expected = 0;\n  let high = 0;\n  let low = 0;\n  for (let i = day; i < 14; i++) {\n    if (expectedPrices.price[i] > expected) {\n      expected = expectedPrices.price[i];\n      high = expectedPrices.high[i];\n      low = expectedPrices.low[i];\n    }\n  }\n  return { expected, high, low };\n}\n\nexport function simulation(runs = 1000) {\n  let pattern = 2;\n\n  let totalProfit = 0;\n\n  for (let i = 0; i < runs; i++) {\n    const basePrice = startPrice();\n    const result =\n      pattern === 0\n        ? pattern0(basePrice)\n        : pattern === 1\n        ? pattern1(basePrice)\n        : pattern === 2\n        ? pattern2(basePrice)\n        : pattern === 3\n        ? pattern3(basePrice)\n        : [];\n\n    result.unshift(basePrice);\n    result.unshift(basePrice);\n\n    for (let i = 3; i < 14; i++) {\n      const knownData = [...result];\n      for (let j = i; j < 14; j++) knownData[j] = 0;\n      const { patterns } = possiblePatterns(knownData);\n      const { expected } = expectedPrice(patterns, i + 1);\n      const price = result[i];\n      // if (price > 125 || i === 13) {\n      //   const gain = Math.floor((1000 * (price - basePrice)) / basePrice) / 10;\n      //   totalProfit += gain;\n      //   console.log(\n      //     `Sell on day ${i - 2} at price ${price} return of ${gain}%`\n      //   );\n      //   break;\n      // }\n      if (expected <= price || i === 13) {\n        const gain = Math.floor((1000 * (price - basePrice)) / basePrice) / 10;\n        totalProfit += gain;\n        console.log(\n          `Sell on day ${i - 2} at price ${price} return of ${gain}%`\n        );\n        break;\n      }\n    }\n    pattern = whichPattern(pattern);\n  }\n\n  console.log(\"Expected money from investing $100\", totalProfit / runs + 100);\n}\n\nexport function simulateFromPrice(\n  sellPrices: number[],\n  lastPattern: number = -1,\n  maxTime = 1000\n) {\n  let allPrices: number[] = [];\n  let failedRuns = 0;\n  let totalProfit = 0;\n\n  const { patterns } = possiblePatterns(sellPrices, lastPattern);\n  const probabilityMap = [0, 0, 0, 0];\n  patterns.forEach(\n    pattern => (probabilityMap[pattern.type] += pattern.probability)\n  );\n  for (let i = 1; i < 4; i++) probabilityMap[i] += probabilityMap[i - 1]; // make cumulitive probability\n\n  const startTime = Date.now();\n\n  let runs = 0;\n  while (Date.now() - startTime < maxTime) {\n    runs++;\n    const basePrice = sellPrices[0];\n\n    const rand = Math.random();\n    const type =\n      rand < probabilityMap[0]\n        ? 0\n        : rand < probabilityMap[1]\n        ? 1\n        : rand < probabilityMap[2]\n        ? 2\n        : 3;\n    let result: number[] = [];\n    let attempts = 0;\n    while (true) {\n      result = runPattern(type, basePrice);\n      result.unshift(basePrice);\n      result.unshift(basePrice);\n      // make sure it matches a possible pattern\n      let match = false;\n      patterns.forEach(pattern => {\n        let thisMatches = true;\n        pattern.dailyPriceRange.forEach((price, idx) => {\n          if (price.high < result[idx]) thisMatches = false;\n          if (price.low > result[idx]) thisMatches = false;\n        });\n        if (thisMatches) match = true;\n      });\n      if (match) break;\n      if (attempts++ > 100) {\n        failedRuns++;\n        break;\n      }\n    }\n    if (attempts > 100) continue;\n\n    for (let i = sellPrices.length; i < 14; i++) {\n      const knownData = [...result];\n      for (let j = i; j < 14; j++) knownData[j] = 0;\n      const { patterns } = possiblePatterns(knownData);\n      const { expected } = expectedPrice(patterns, i + 1);\n      const price = result[i];\n      // if (price > 125 || i === 13) {\n      //   const gain = Math.floor((1000 * (price - basePrice)) / basePrice) / 10;\n      //   totalProfit += gain;\n      //   console.log(\n      //     `Sell on day ${i - 2} at price ${price} return of ${gain}%`\n      //   );\n      //   break;\n      // }\n      const isDecreasing = patterns.every(p => p.type === 2);\n      if (expected <= price || i === 13 || isDecreasing) {\n        const gain = Math.floor((1000 * (price - basePrice)) / basePrice) / 10;\n        totalProfit += gain;\n        // console.log(result);\n        // console.log(\n        //   `Sell on day ${i -\n        //     2} at price ${price} return of ${gain}% - expected = ${expected}`\n        // );\n        allPrices.push(price);\n        break;\n      }\n    }\n  }\n\n  // console.log(\"Expected money from investing $100\", totalProfit / RUNS + 100);\n  return { expectedPrice: totalProfit / (runs - failedRuns) + 100, allPrices };\n}\n\nexport function makeHistogram(prices: number[], bucketSize: number) {\n  const counts: number[] = [];\n  for (let i = 0; i <= 700; i += bucketSize) counts[i / bucketSize] = 0;\n\n  prices.forEach(price => {\n    const idx = Math.floor(price / bucketSize);\n    counts[idx]++;\n  });\n  counts.forEach((c, i) => (counts[i] = (c / prices.length) * 100));\n  return counts;\n}\n\n// const prices = simulateFromPrice([100, 100, 90, 85], 0);\n// const hist = histogram(prices);\n// console.log(hist.join(\"\\n\"));\n\n// console.log(possiblePatterns([98, 98, 59, 55, 51, 48, 44, 41, 38, 120, 154]));\n// simulation();\n// console.log(predictPattern0([100, 100]));\n\n// console.log(possiblePatterns([100]).csv.join(\"\\n\"));\n","import React, { useRef, useEffect, useState } from \"react\";\nimport * as d3 from \"d3\";\n// https://www.d3-graph-gallery.com/graph/line_confidence_interval.html\n\ninterface Area {\n  x: number;\n  y0: number;\n  y1: number;\n}\ninterface Line {\n  x: number;\n  y: number;\n}\n\nexport interface ChartData {\n  lines: { data: Line[] }[];\n  areas: { opacity?: number; data: Area[] }[];\n  title: string;\n}\n\ninterface SelectedPoints {\n  allLines: Line[];\n  allAreas: Area[];\n  allPoints: (Line | Area)[];\n}\n\ninterface IProps {\n  data: ChartData;\n  options: {\n    yDomain: [number, number];\n    xDomain: [number, number];\n    yTickFormat?: any;\n    xTickFormat?: any;\n  };\n  calloutMessage?: { (selected: SelectedPoints): string };\n}\n\ninterface ChartElements {\n  svg: d3.Selection<SVGGElement, unknown, null, undefined>;\n  dataArea: d3.Selection<SVGGElement, unknown, null, undefined>;\n  title: d3.Selection<SVGTextElement, unknown, null, undefined>;\n  x: d3.ScaleLinear<number, number>;\n  y: d3.ScaleLinear<number, number>;\n  areas: d3.Selection<SVGPathElement, Area[], null, undefined>[];\n  lines: d3.Selection<SVGPathElement, Line[], null, undefined>[];\n}\ntype GenericSelection = d3.Selection<any, any, any, any>;\n\nexport const Chart = (props: IProps) => {\n  const d3Container = useRef(null);\n\n  // set the dimensions and margins of the graph\n  const margin = { top: 10, right: 30, bottom: 30, left: 60 },\n    width = 460 - margin.left - margin.right,\n    height = 400 - margin.top - margin.bottom;\n\n  const [chartElements, setChartElements] = useState(\n    null as ChartElements | null\n  );\n\n  useEffect(() => {\n    if (chartElements?.svg) chartElements.svg.remove();\n\n    // append the svg object to the body of the page\n    const newSvg = d3\n      .select(d3Container.current)\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    newSvg\n      .append(\"rect\")\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .style(\"fill\", \"rgba(0,0,0,0)\");\n\n    // Add X axis --> it is a date format\n    const x = d3\n      .scaleLinear()\n      .domain(props.options.xDomain)\n      .range([0, width]);\n    newSvg\n      .append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x).tickFormat(props.options.xTickFormat));\n\n    // Add Y axis\n    const y = d3\n      .scaleLinear()\n      .domain(props.options.yDomain)\n      .range([height, 0]);\n    newSvg\n      .append(\"g\")\n      .call(d3.axisLeft(y).tickFormat(props.options.yTickFormat));\n\n    // add the title\n    const title = newSvg\n      .append(\"text\")\n      .attr(\"x\", width / 2)\n      .attr(\"y\", 0 + margin.top)\n      .attr(\"text-anchor\", \"middle\")\n      .style(\"font-size\", \"16px\")\n      .text(props.data.title);\n\n    // add the hover callout\n    const bisect = (mouse: [number, number]): SelectedPoints => {\n      // mouse = [x,y] coordinates of the mouse\n\n      const allXvalues = new Set<number>();\n      props?.data?.areas?.forEach(item =>\n        item.data.forEach(point => allXvalues.add(point.x))\n      );\n      props?.data?.lines?.forEach(item =>\n        item.data.forEach(point => allXvalues.add(point.x))\n      );\n\n      let closestX = 0;\n      const xPos = x.invert(mouse[0]);\n      Array.from(allXvalues).forEach(xValue => {\n        if (closestX === 0) closestX = xValue;\n        if (Math.abs(xPos - xValue) < Math.abs(xPos - closestX))\n          closestX = xValue;\n      });\n\n      const allLines = [] as Line[];\n      const allAreas = [] as Area[];\n      props?.data?.areas?.forEach(item =>\n        item.data.forEach(point => point.x === closestX && allAreas.push(point))\n      );\n      props?.data?.lines?.forEach(item =>\n        item.data.forEach(point => point.x === closestX && allLines.push(point))\n      );\n\n      return {\n        allAreas,\n        allLines,\n        allPoints: [...allAreas, ...allLines]\n      };\n    };\n\n    const callout = (g: GenericSelection, value: string) => {\n      if (!value) return g.style(\"display\", \"none\");\n\n      g.style(\"display\", null)\n        .style(\"pointer-events\", \"none\")\n        .style(\"font\", \"10px sans-serif\");\n\n      const path = g\n        .selectAll(\"path\")\n        .data([null])\n        .join(\"path\")\n        .attr(\"fill\", \"white\")\n        .attr(\"stroke\", \"black\");\n\n      const text = g\n        .selectAll(\"text\")\n        .data([null])\n        .join(\"text\")\n        .call(text =>\n          text\n            .selectAll(\"tspan\")\n            .data((value + \"\").split(/\\n/))\n            .join(\"tspan\")\n            .attr(\"x\", 0)\n            .attr(\"y\", (d, i) => `${i * 1.1}em`)\n            .style(\"font-weight\", (_, i) => (i ? null : \"bold\"))\n            .text(d => d)\n        );\n\n      const { y, width: w, height: h } = (text as any).node().getBBox();\n\n      text.attr(\"transform\", `translate(${-w / 2},${-27 - y})`);\n      /*\n      m 185 189\n      h 62\n      l 5 5\n      l 5 -5\n      h 62\n      v -32\n      h -135\n      z\n\n      */\n      path.attr(\n        \"d\",\n        `M${-w / 2 - 10},-5H-5l5,5l5,-5H${w / 2 + 10}v-${h + 20}h-${w + 20}z`\n      );\n    };\n\n    const dataArea = newSvg.append(\"g\");\n\n    const tooltip = newSvg.append(\"g\");\n\n    newSvg.on(\"touchmove mousemove\", function() {\n      const mouse = d3.mouse(this);\n      const selectedPoints = bisect(mouse);\n      if (!selectedPoints.allPoints.length || !props.calloutMessage) return;\n\n      const xPos = selectedPoints.allPoints[0]?.x;\n      // const yPos = allLines[0]?.y;\n      // const yMax = Math.max(...(allAreas || []).map(p => p.y1));\n      // const yMin = Math.min(...(allAreas || []).map(p => p.y0));\n\n      // const text = `Max ${yMax}, Min ${yMin}, value ${yPos}`;\n\n      const text = props.calloutMessage(selectedPoints);\n\n      tooltip\n        .attr(\"transform\", `translate(${x(xPos)},${mouse[1]})`)\n        .call(callout, text);\n    });\n\n    newSvg.on(\"touchend mouseleave\", () => tooltip.call(callout, null));\n\n    // persist everything\n    setChartElements({\n      ...chartElements,\n      svg: newSvg,\n      dataArea,\n      x,\n      y,\n      title,\n      areas: [],\n      lines: []\n    });\n  }, [props.options]);\n\n  useEffect(() => {\n    setChartElements(chartElements => {\n      if (!chartElements) return chartElements;\n\n      const { dataArea, x, y, areas, lines } = chartElements;\n      const newAreas: typeof areas = [];\n      const newLines: typeof lines = [];\n\n      props.data.areas.forEach((area, idx) => {\n        const elem = areas[idx] || dataArea.append(\"path\");\n        newAreas[idx] = elem;\n        elem\n          .datum(area.data)\n          .attr(\"fill\", \"#cce5df\")\n          .attr(\"stroke\", \"none\")\n          .attr(\"opacity\", area.opacity !== undefined ? area.opacity : 1)\n          .attr(\n            \"d\",\n            d3\n              .area<Area>()\n              .x(d => x(d.x))\n              .y0(d => y(d.y0))\n              .y1(d => y(d.y1))\n          );\n      });\n\n      props.data.lines.forEach((line, idx) => {\n        const elem = lines[idx] || dataArea.append(\"path\");\n        newLines[idx] = elem;\n        elem\n          .datum(line.data)\n          .attr(\"fill\", \"none\")\n          .attr(\"stroke\", \"steelblue\")\n          .attr(\"stroke-width\", 1.5)\n          .attr(\n            \"d\",\n            d3\n              .line<Line>()\n              .x(d => x(d.x))\n              .y(d => y(d.y))\n          );\n      });\n\n      for (let i = newAreas.length; i < areas.length; i++) areas[i].remove();\n      for (let i = newLines.length; i < lines.length; i++) lines[i].remove();\n      return { ...chartElements, areas: newAreas, lines: newLines };\n    });\n  }, [props.data, chartElements?.svg]);\n\n  return (\n    <>\n      <svg\n        className=\"d3-component\"\n        width={400}\n        height={200}\n        ref={d3Container}\n      />\n    </>\n  );\n};\n\n// /* App */\n// export const MyApp = () => {\n//   return (\n//     <div className=\"my-app\">\n//       <MyD3Component data={[1, 2, 3]} />\n//     </div>\n//   );\n// };\n","interface StorageItem {\n  expiration: number;\n  value: any;\n}\n\ninterface DataStore {\n  [prop: string]: StorageItem;\n}\n\nlet memoryStore: DataStore = {};\n\nconst USE_LOCAL_STORE = typeof localStorage !== \"undefined\";\nconst LOCAL_STORE_KEY = \"MONETFE_DATA_STORE\";\nconst VALUE_EXPIRATION = 14 * 24 * 60 * 60 * 1000;\nconst EXPIRATION_CHECK_INTERVAL = 60 * 60 * 1000;\n\nlet lastExpirationCheck = 0;\nfunction checkForExpired() {\n  if (Date.now() < lastExpirationCheck + EXPIRATION_CHECK_INTERVAL) return;\n  const store = getStore();\n  Object.keys(store).forEach(key => {\n    if (store[key].expiration < Date.now()) delete store[key];\n  });\n  setStore(store);\n  lastExpirationCheck = Date.now();\n}\n\nfunction getStore(): DataStore {\n  if (USE_LOCAL_STORE) {\n    const dataStr = localStorage.getItem(LOCAL_STORE_KEY);\n    if (dataStr) return JSON.parse(dataStr);\n  }\n  return memoryStore;\n}\n\nfunction setStore(value: DataStore) {\n  memoryStore = value;\n  if (USE_LOCAL_STORE) {\n    localStorage.setItem(LOCAL_STORE_KEY, JSON.stringify(value));\n  }\n}\n\nfunction set(key: string, value: any, expiration = VALUE_EXPIRATION) {\n  const store = getStore();\n  store[key] = {\n    expiration: Date.now() + expiration,\n    value\n  };\n  setStore(store);\n  return value;\n}\n\nfunction get(key: string) {\n  const data = getStore()[key];\n  if (!data) return;\n  if (data.expiration < Date.now()) return clear(key);\n  return data.value;\n}\n\nfunction clear(key: string) {\n  const data = getStore();\n  delete data[key];\n  setStore(data);\n}\n\nexport { set, get, clear, checkForExpired };\n","import React, { useEffect, useState, useMemo } from \"react\";\nimport {\n  possiblePatterns,\n  patternNames,\n  expectedPrice,\n  simulateFromPrice,\n  makeHistogram\n} from \"./turnipCalculator\";\nimport { Chart, ChartData } from \"./Chart\";\nimport * as storageService from \"./storageService\";\n\nimport style from \"./Turnips.module.css\";\n\nconst DAYS = [\n  \"Sun AM: Buy\",\n  \"Sun PM\",\n  \"Mon AM\",\n  \"Mon PM\",\n  \"Tue AM\",\n  \"Tue PM\",\n  \"Wed AM\",\n  \"Wed PM\",\n  \"Thu AM\",\n  \"Thu PM\",\n  \"Fri AM\",\n  \"Fri PM\",\n  \"Sat AM\",\n  \"Sat PM\"\n];\n\nconst turnipPriceStore = storageService.get(\"turnipPriceStore\");\n\nfunction cleanPrices(prices: number[]) {\n  while (prices?.length && !prices[prices.length - 1]) prices.pop();\n}\ncleanPrices(turnipPriceStore?.prices);\n\nconst PriceForm = (props: {\n  onChange: { (price: number[], lastPattern: number): unknown };\n}) => {\n  const [lastPattern, setLastPattern] = useState(\n    turnipPriceStore?.lastPattern || 4\n  );\n  const [prices, setPrices] = useState<number[]>(\n    turnipPriceStore?.prices || [100, 100]\n  );\n  const changePrice = (day: number) => (e: { target: { value: string } }) => {\n    const newPrices = [...prices];\n    newPrices[day] = parseFloat(e.target.value);\n    if (day === 0) newPrices[1] = newPrices[0] || (undefined as any);\n    setPrices(newPrices);\n  };\n  useDebounce(() => {\n    storageService.set(\"turnipPriceStore\", { prices, lastPattern });\n    props.onChange(prices, lastPattern);\n  }, 1000);\n  return (\n    <>\n      <div>\n        Last week's pattern:{\" \"}\n        <select\n          onChange={e => setLastPattern(parseInt(e.target.value))}\n          className={style.patternSelect}\n        >\n          {patternNames.map((name, idx) => (\n            <option selected={idx === lastPattern} value={idx}>\n              {name}\n            </option>\n          ))}\n        </select>\n      </div>\n      <div className={style.priceTable}>\n        <span className={style.formDay}>\n          <input\n            type=\"text\"\n            value={prices[0] || \"\"}\n            onChange={changePrice(0)}\n          />\n          <div className={style.dayName}>Buy Price</div>\n        </span>\n        <span className={style.formDay}>\n          <input\n            type=\"text\"\n            value={prices[2] || \"\"}\n            onChange={changePrice(2)}\n          />\n          <input\n            type=\"text\"\n            value={prices[3] || \"\"}\n            onChange={changePrice(3)}\n          />\n          <div className={style.dayName}>Monday</div>\n        </span>\n        <span className={style.formDay}>\n          <input\n            type=\"text\"\n            value={prices[4] || \"\"}\n            onChange={changePrice(4)}\n          />\n          <input\n            type=\"text\"\n            value={prices[5] || \"\"}\n            onChange={changePrice(5)}\n          />\n          <div className={style.dayName}>Tuesday</div>\n        </span>\n        <span className={style.formDay}>\n          <input\n            type=\"text\"\n            value={prices[6] || \"\"}\n            onChange={changePrice(6)}\n          />\n          <input\n            type=\"text\"\n            value={prices[7] || \"\"}\n            onChange={changePrice(7)}\n          />\n          <div className={style.dayName}>Wednesday</div>\n        </span>\n        <span className={style.formDay}>\n          <input\n            type=\"text\"\n            value={prices[8] || \"\"}\n            onChange={changePrice(8)}\n          />\n          <input\n            type=\"text\"\n            value={prices[9] || \"\"}\n            onChange={changePrice(9)}\n          />\n          <div className={style.dayName}>Thursday</div>\n        </span>\n        <span className={style.formDay}>\n          <input\n            type=\"text\"\n            value={prices[10] || \"\"}\n            onChange={changePrice(10)}\n          />\n          <input\n            type=\"text\"\n            value={prices[11] || \"\"}\n            onChange={changePrice(11)}\n          />\n          <div className={style.dayName}>Friday</div>\n        </span>\n        <span className={style.formDay}>\n          <input\n            type=\"text\"\n            value={prices[12] || \"\"}\n            onChange={changePrice(12)}\n          />\n          <input\n            type=\"text\"\n            value={prices[13] || \"\"}\n            onChange={changePrice(13)}\n          />\n          <div className={style.dayName}>Saturday</div>\n        </span>\n      </div>\n    </>\n  );\n};\n\nfunction useDebounceFn(func: { (): unknown }, delay: number, deps: any[]) {\n  const [data] = useState({ id: (0 as unknown) as NodeJS.Timeout });\n\n  useEffect(() => {\n    clearTimeout(data.id);\n    data.id = setTimeout(() => {\n      func();\n    }, delay);\n  }, [...deps]);\n}\n\nfunction useDebounce<T>(value: T, delay: number): T {\n  const [debouncedValue, setDebouncedValue] = useState(value);\n  useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value]);\n  return debouncedValue;\n}\n\ninterface SimulationResult {\n  histogram: number[];\n  expected: number;\n  high: number;\n  low: number;\n}\n\nexport const Turnips = () => {\n  // [\n  //   \"Random\",\n  //   \"Large Spike\",\n  //   \"Decreasing\",\n  //   \"Small Spike\"\n  // ];\n  const [lastPattern, setLastPattern] = useState(4);\n  const [prices, setPrices] = useState<number[]>([]);\n  // const prices = [98, 98]; // , 59, 55, 51, 48, 44, 41, 38, 120, 117, 154\n  const [simulated, setSimulated] = useState<SimulationResult | null>(null);\n\n  let currentDay = 0;\n  let currentPrice = 0;\n  prices.forEach((p, i) => {\n    if (p) {\n      currentDay = i;\n      currentPrice = p;\n    }\n  });\n  const { patterns } = possiblePatterns(prices, lastPattern);\n\n  const expected = expectedPrice(patterns, currentDay + 1);\n  const isDecreasing = patterns.every(p => p.type === 2);\n\n  // if (patterns.length > 1) {\n  //   const masterPattern = cloneDeep(patterns[0]);\n  //   patterns.forEach(pattern => {\n  //     pattern.forEach((val, i) => {\n  //       if (masterPattern[i].high < val.high) masterPattern[i].high = val.high;\n  //       if (masterPattern[i].low > val.low) masterPattern[i].low = val.low;\n  //     });\n  //   });\n  //   patterns.unshift(masterPattern);\n  // }\n\n  const charts: ChartData[] = patterns.map(pattern => {\n    const area = pattern.dailyPriceRange.map((p, i) => ({\n      x: i,\n      y0: p.low as number,\n      y1: p.high as number\n    }));\n    return {\n      lines: [\n        {\n          data: pattern.dailyPriceRange.map((p, i) => ({\n            x: i,\n            y: prices[i]\n          }))\n        }\n      ],\n      areas: [{ data: area, opacity: pattern.probability * 4 }],\n      title: `${patternNames[pattern.type]} (${Math.round(\n        pattern.probability * 1000\n      ) / 10}%)`\n    };\n  });\n\n  if (patterns.length > 1) {\n    const masterChart: ChartData = {\n      lines: [\n        {\n          data: patterns[0].dailyPriceRange.map((p, i) => ({\n            x: i,\n            y: prices[i]\n          }))\n        }\n      ],\n      areas: charts.map(c => c.areas[0]),\n      title: \"All Possible Prices\"\n    };\n    charts.forEach(\n      chart => (chart.areas[0] = { ...chart.areas[0], opacity: 1 })\n    );\n    charts.unshift(masterChart);\n  }\n\n  const simulate = async () => {\n    // console.log(\"simulate=================\", prices, lastPattern);\n    if (!charts.length) return;\n    let expectedPrice = 0;\n    let allPrices = [] as number[];\n    for (let i = 0; i < 10; i++) {\n      const res = simulateFromPrice(prices, lastPattern, 100);\n      expectedPrice += res.expectedPrice * res.allPrices.length;\n      allPrices.push(...res.allPrices);\n      await new Promise(r => setTimeout(r, 50));\n    }\n    expectedPrice = expectedPrice / allPrices.length;\n    // console.log(allPrices.length);\n    const histogram = makeHistogram(allPrices, 10);\n    setSimulated({\n      histogram,\n      expected: expectedPrice,\n      low: Math.min(...allPrices),\n      high: Math.max(...allPrices)\n    });\n  };\n  useEffect(\n    () =>\n      setSimulated({\n        ...(simulated as SimulationResult),\n        expected: 0,\n        high: 0,\n        low: 0\n      }),\n    [prices, lastPattern]\n  );\n  useDebounceFn(simulate, 1000, [prices, lastPattern]);\n\n  return (\n    <>\n      <h1>Animal Crossing New Horizons Turnip Price Calculator</h1>\n      <PriceForm\n        onChange={(prices, pattern) => {\n          setPrices(prices);\n          setLastPattern(pattern);\n        }}\n      />\n      {charts.length === 0 ? (\n        <div className={style.recommendation}>\n          This scenario doesn't seem possible. Is there a mistake in the prices?\n        </div>\n      ) : (\n        <>\n          {isDecreasing ? (\n            <div className={style.recommendation}>\n              Sell Now!! Prices will only decrease from here.\n            </div>\n          ) : (\n            <div\n              className={style.recommendation}\n              style={{ opacity: simulated?.expected ? 1 : 0.5 }}\n            >\n              {(simulated?.expected || expected.expected) > currentPrice\n                ? `Recommendation is to hold. `\n                : `Sell Now!! `}\n              Prices are expected to be{\" \"}\n              <b>{Math.round(simulated?.expected || expected.expected)}</b> in\n              the future with a low of{\" \"}\n              <span style={{ color: \"red\" }}>\n                {Math.min(expected.low, simulated?.low || 999)}\n              </span>{\" \"}\n              and a high of{\" \"}\n              <span style={{ color: \"green\" }}>\n                {Math.max(expected.high, simulated?.high || 0)}\n              </span>\n              .\n            </div>\n          )}\n          <Chart\n            data={{\n              lines: [\n                {\n                  data:\n                    simulated?.histogram?.map((y, i) => ({ x: i * 10, y })) ||\n                    []\n                }\n              ],\n              areas: [],\n              title: \"Probability\"\n            }}\n            options={{\n              xDomain: [0, 600], //histDomain.x,\n              yDomain: [0, 100], //histDomain.y,\n              yTickFormat: (a: any) => `${a}%`\n            }}\n            calloutMessage={selectedPoints => {\n              const x = selectedPoints.allLines[0].x;\n              const y = selectedPoints.allLines[0].y;\n              // const day = DAYS[x];\n              // const yPos = allLines[0]?.y;\n              // const yMax = Math.max(...(allAreas || []).map(p => p.y1));\n              // const yMin = Math.min(...(allAreas || []).map(p => p.y0));\n\n              return `Price ${x} expected ${Math.round(y * 10) / 10}%`;\n            }}\n          />\n          {charts.map((chart, idx) => {\n            return (\n              <Chart\n                key={`${idx}-${JSON.stringify(chart)}`}\n                data={chart}\n                options={{\n                  yDomain: [0, 600],\n                  xDomain: [0, 14],\n                  xTickFormat: (d: number) =>\n                    [\n                      \"Buy\",\n                      \"\",\n                      \"Mon\",\n                      \"\",\n                      \"Tue\",\n                      \"\",\n                      \"Wed\",\n                      \"\",\n                      \"Thu\",\n                      \"\",\n                      \"Fri\",\n                      \"\",\n                      \"Sat\",\n                      \"\"\n                    ][d as number]\n                }}\n                calloutMessage={selectedPoints => {\n                  const x = selectedPoints.allLines[0].x;\n                  const day = DAYS[x];\n                  const yMax = Math.max(\n                    ...(selectedPoints.allAreas || []).map(p => p.y1)\n                  );\n                  const yMin = Math.min(\n                    ...(selectedPoints.allAreas || []).map(p => p.y0)\n                  );\n\n                  return `${day} price ${yMin} - ${yMax}`;\n                }}\n              />\n            );\n          })}\n        </>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\nimport \"./App.css\";\nimport { Turnips } from \"./Turnips\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Turnips />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}